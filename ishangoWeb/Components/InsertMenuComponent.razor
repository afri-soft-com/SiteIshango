@using ClassLibraryIshangoBar.Menus
@using System.IO
@using Syncfusion.Blazor.PivotView
@using Microsoft.AspNetCore.Hosting;
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject IWebHostEnvironment Environment

@inject MenuDataAccessLayer menuDAL


    <EditForm Model="menu" OnSubmit="HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group col-md-12">
            <InputFile OnChange="HandleFileSelected" class="form-control"   placeholder="image*" />
        </div>
        <div class="form-group col-md-12">
            <InputText @bind-Value="menu.DescriptionMenu" class="form-control"  placeholder="Déscription*" />
        </div>
        <div class="form-group col-md-12">
            <InputText @bind-Value="menu.PrixMenu" class="form-control"  placeholder="Prix*" />
        </div>
        <div class="form-group col-md-12">
            <button class="btn btn-default submit_btn" type="submit">Enregistrer</button>
        </div>

    </EditForm>

    <div></div>
    <hr />


    <table class="table table-responsive table-striped table-bordered">
        <caption>
            <h3></h3>
        </caption>
        <thead>
            <tr>
                <th>ID</th>
                <th>IMAGE</th>
                <th>DESCRIPTION</th>
                <th>PRIX</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in listeMenu)
            {

            <tr>
                <td>@item.IdMenu</td>
                <td>@item.ImageMenu</td>
                <td>@item.DescriptionMenu</td>
                <td>@item.PrixMenu</td>
                <td><button class="btn btn-primary" >Modifier</button></td>
                <td><button class="btn btn-danger" >Supprimer</button></td>
            </tr>
            }
        </tbody>
    </table>

@code {

    MenuModel menu = new MenuModel();
    string NomdeFichier;
    IFileListEntry imageMenu;
    IEnumerable<MenuModel> listeMenu;

    protected override void OnInitialized()
    {
        listeMenu = menuDAL.GetLesMenus();
    }


    async Task HandleValidSubmit()
    {
        // menuDAL.InsertMenu(menu);
        listeMenu = menuDAL.GetLesMenus();

        if (imageMenu != null)
        {

            await SaveMenu(imageMenu);

            // menu = default;
        }
    }




    void HandleFileSelected(IFileListEntry[] files)
    {
        imageMenu = files.First();
    }
    // public async Task SaveMenu(IFileListEntry file, MenuModel menuModel)

    public async Task SaveMenu(IFileListEntry file)
    {
        // recuperation du derneir enregistement
        NomdeFichier = menuDAL.GetDernierDUCodeMenU();

        // Creation de dossier
        var profileUploads = Path.Combine(Environment.WebRootPath, $"uploads/IMAGEmenu");
        if (!Directory.Exists(profileUploads))
            Directory.CreateDirectory(profileUploads);
        if (file.Data.Length > 0)
        {


            // diviser le nom deu fichie pour recupere l' extension
            var fileNameArray = file.Name.Split(".");
            // Le nom avvec l' extension
            var fileName = NomdeFichier + $".{fileNameArray.LastOrDefault() ?? "png"}";

            //UPLOAL
            using var fileStream = new FileStream(Path.Combine(profileUploads, fileName), FileMode.Create);

            await file.Data.CopyToAsync(fileStream);
            var filePath = fileStream.Name.Replace(Environment.WebRootPath, UriHelper.BaseUri);
            var fileWebPath = filePath.Replace("\\", "/");

            //  Enregistrment  dans la bd 
            //menuDAL.InsertMenu(menu, fileWebPath);
            menuDAL.TestSave(menu, fileWebPath);
        }
    }


}
